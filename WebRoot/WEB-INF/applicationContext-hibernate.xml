<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
<!--如果底层数据库是 DB2、SQL Server、MySQL 等非 Oracle 的其它数据库，则只要简单配置一个 DefaultLobHandler 就可以了
	<bean id="nativeJdbcExtractor"
		class="org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor"
		lazy-init="true" />
	-->
	<bean id="lobHandler"
		class="org.springframework.jdbc.support.lob.DefaultLobHandler"
		lazy-init="true">
		<!--<property name="nativeJdbcExtractor">
			<ref local="nativeJdbcExtractor" />
		</property>
	--></bean>
	<!-- Hibernate SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="lobHandler" ref="lobHandler" />
		<!--
			<property name="mappingDirectoryLocations"> <list>
			<value>classpath:/com/ffcs/crm/model</value>
			<value>classpath:/com/ffcs/crm/evlCharacs/model</value>
			<value>classpath:/com/ffcs/crm/log/model</value>
			<!-<value>classpath:/com/ffcs/crm/evlCharacsSal/model</value>->
			</list> </property>
		-->
		<property name="mappingLocations">
			<list>
				<value>
					classpath*:com/wuye/resource/*.hbm.xml
				</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.query.substitutions">
					true 'Y', false 'N'
				</prop>

				<prop key="hibernate.query.factory_class">
					org.hibernate.hql.ast.ASTQueryTranslatorFactory
				</prop>
				<prop key="hibernate.cache.provider_class">
					org.hibernate.cache.HashtableCacheProvider
				</prop>
				<prop key="hibernate.show_sql">true</prop>

				<!-- <prop key="hibernate.query.factory_class">org.hibernate.hql.ast.ASTQueryTranslatorFactory</prop>
				-->
				<!--prop key="hibernate.query.factory_class">org.hibernate.hql.classic.ClassicQueryTranslatorFactory</prop-->
				<!-- Create/update the database tables automatically when the JVM starts up
					<prop key="hibernate.hbm2ddl.auto">update</prop> -->
				<!-- Turn batching off for better error messages under PostgreSQL
					<prop key="hibernate.jdbc.batch_size">0</prop> -->
			</props>
		</property>
	</bean>

	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- Generic Dao - can be used when doing standard CRUD -->
	<bean id="dao"
		class="com.wuye.common.dao.hibernate.BaseDaoHibernate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
</beans>
